// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ContainerFormats.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Akka.Remote.Proto {

  /// <summary>Holder for reflection information generated from ContainerFormats.proto</summary>
  internal static partial class ContainerFormatsReflection {

    #region Descriptor
    /// <summary>File descriptor for ContainerFormats.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ContainerFormatsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZDb250YWluZXJGb3JtYXRzLnByb3RvEhFBa2thLlJlbW90ZS5Qcm90byKK",
            "AQoRU2VsZWN0aW9uRW52ZWxvcGUSFwoPZW5jbG9zZWRNZXNzYWdlGAEgASgM",
            "EhQKDHNlcmlhbGl6ZXJJZBgCIAEoBRItCgdwYXR0ZXJuGAMgAygLMhwuQWtr",
            "YS5SZW1vdGUuUHJvdG8uU2VsZWN0aW9uEhcKD21lc3NhZ2VNYW5pZmVzdBgE",
            "IAEoDCJKCglTZWxlY3Rpb24SLAoEdHlwZRgBIAEoDjIeLkFra2EuUmVtb3Rl",
            "LlByb3RvLlBhdHRlcm5UeXBlEg8KB21hdGNoZXIYAiABKAkqPAoLUGF0dGVy",
            "blR5cGUSCgoGUEFSRU5UEAASDgoKQ0hJTERfTkFNRRABEhEKDUNISUxEX1BB",
            "VFRFUk4QAkICSAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Akka.Remote.Proto.PatternType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Proto.SelectionEnvelope), global::Akka.Remote.Proto.SelectionEnvelope.Parser, new[]{ "EnclosedMessage", "SerializerId", "Pattern", "MessageManifest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Proto.Selection), global::Akka.Remote.Proto.Selection.Parser, new[]{ "Type", "Matcher" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  internal enum PatternType {
    [pbr::OriginalName("PARENT")] Parent = 0,
    [pbr::OriginalName("CHILD_NAME")] ChildName = 1,
    [pbr::OriginalName("CHILD_PATTERN")] ChildPattern = 2,
  }

  #endregion

  #region Messages
  internal sealed partial class SelectionEnvelope : pb::IMessage<SelectionEnvelope> {
    private static readonly pb::MessageParser<SelectionEnvelope> _parser = new pb::MessageParser<SelectionEnvelope>(() => new SelectionEnvelope());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelectionEnvelope> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Proto.ContainerFormatsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectionEnvelope() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectionEnvelope(SelectionEnvelope other) : this() {
      enclosedMessage_ = other.enclosedMessage_;
      serializerId_ = other.serializerId_;
      pattern_ = other.pattern_.Clone();
      messageManifest_ = other.messageManifest_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectionEnvelope Clone() {
      return new SelectionEnvelope(this);
    }

    /// <summary>Field number for the "enclosedMessage" field.</summary>
    public const int EnclosedMessageFieldNumber = 1;
    private pb::ByteString enclosedMessage_ = pb::ByteString.Empty;
    /// <summary>
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString EnclosedMessage {
      get { return enclosedMessage_; }
      set {
        enclosedMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serializerId" field.</summary>
    public const int SerializerIdFieldNumber = 2;
    private int serializerId_;
    /// <summary>
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SerializerId {
      get { return serializerId_; }
      set {
        serializerId_ = value;
      }
    }

    /// <summary>Field number for the "pattern" field.</summary>
    public const int PatternFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Akka.Remote.Proto.Selection> _repeated_pattern_codec
        = pb::FieldCodec.ForMessage(26, global::Akka.Remote.Proto.Selection.Parser);
    private readonly pbc::RepeatedField<global::Akka.Remote.Proto.Selection> pattern_ = new pbc::RepeatedField<global::Akka.Remote.Proto.Selection>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Akka.Remote.Proto.Selection> Pattern {
      get { return pattern_; }
    }

    /// <summary>Field number for the "messageManifest" field.</summary>
    public const int MessageManifestFieldNumber = 4;
    private pb::ByteString messageManifest_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MessageManifest {
      get { return messageManifest_; }
      set {
        messageManifest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelectionEnvelope);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelectionEnvelope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnclosedMessage != other.EnclosedMessage) return false;
      if (SerializerId != other.SerializerId) return false;
      if(!pattern_.Equals(other.pattern_)) return false;
      if (MessageManifest != other.MessageManifest) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnclosedMessage.Length != 0) hash ^= EnclosedMessage.GetHashCode();
      if (SerializerId != 0) hash ^= SerializerId.GetHashCode();
      hash ^= pattern_.GetHashCode();
      if (MessageManifest.Length != 0) hash ^= MessageManifest.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EnclosedMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(EnclosedMessage);
      }
      if (SerializerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SerializerId);
      }
      pattern_.WriteTo(output, _repeated_pattern_codec);
      if (MessageManifest.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(MessageManifest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnclosedMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EnclosedMessage);
      }
      if (SerializerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SerializerId);
      }
      size += pattern_.CalculateSize(_repeated_pattern_codec);
      if (MessageManifest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MessageManifest);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelectionEnvelope other) {
      if (other == null) {
        return;
      }
      if (other.EnclosedMessage.Length != 0) {
        EnclosedMessage = other.EnclosedMessage;
      }
      if (other.SerializerId != 0) {
        SerializerId = other.SerializerId;
      }
      pattern_.Add(other.pattern_);
      if (other.MessageManifest.Length != 0) {
        MessageManifest = other.MessageManifest;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            EnclosedMessage = input.ReadBytes();
            break;
          }
          case 16: {
            SerializerId = input.ReadInt32();
            break;
          }
          case 26: {
            pattern_.AddEntriesFrom(input, _repeated_pattern_codec);
            break;
          }
          case 34: {
            MessageManifest = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class Selection : pb::IMessage<Selection> {
    private static readonly pb::MessageParser<Selection> _parser = new pb::MessageParser<Selection>(() => new Selection());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Selection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Proto.ContainerFormatsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Selection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Selection(Selection other) : this() {
      type_ = other.type_;
      matcher_ = other.matcher_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Selection Clone() {
      return new Selection(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Akka.Remote.Proto.PatternType type_ = 0;
    /// <summary>
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Proto.PatternType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "matcher" field.</summary>
    public const int MatcherFieldNumber = 2;
    private string matcher_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Matcher {
      get { return matcher_; }
      set {
        matcher_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Selection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Selection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Matcher != other.Matcher) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Matcher.Length != 0) hash ^= Matcher.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Matcher.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Matcher);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Matcher.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Matcher);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Selection other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Matcher.Length != 0) {
        Matcher = other.Matcher;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            type_ = (global::Akka.Remote.Proto.PatternType) input.ReadEnum();
            break;
          }
          case 18: {
            Matcher = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
