<Project>
  <PropertyGroup>
    <Copyright>Copyright Â© 2013-2021 Akka.NET Team</Copyright>
    <Authors>Akka.NET Team</Authors>
    <VersionPrefix>1.4.15</VersionPrefix>
    <PackageIconUrl>https://getakka.net/images/akkalogo.png</PackageIconUrl>
    <PackageProjectUrl>https://github.com/akkadotnet/akka.net</PackageProjectUrl>
    <PackageLicenseUrl>https://github.com/akkadotnet/akka.net/blob/master/LICENSE</PackageLicenseUrl>
    <NoWarn>$(NoWarn);CS1591;xUnit1013</NoWarn>
  </PropertyGroup>
  <PropertyGroup>
    <XunitVersion>2.4.1</XunitVersion>
    <TestSdkVersion>16.8.3</TestSdkVersion>
    <HyperionVersion>0.9.16</HyperionVersion>
    <NewtonsoftJsonVersion>12.0.3</NewtonsoftJsonVersion>
    <NBenchVersion>2.0.1</NBenchVersion>
    <ProtobufVersion>3.15.3</ProtobufVersion>
    <NetCoreTestVersion>netcoreapp3.1</NetCoreTestVersion>
    <NetTestVersion>net5.0</NetTestVersion>
    <NetFrameworkTestVersion>net471</NetFrameworkTestVersion>
    <NetStandardLibVersion>netstandard2.0</NetStandardLibVersion>
    <FluentAssertionsVersion>5.10.3</FluentAssertionsVersion>
    <FsCheckVersion>2.15.1</FsCheckVersion>
    <HoconVersion>2.0.3</HoconVersion>
    <ConfigurationManagerVersion>4.7.0</ConfigurationManagerVersion>
    <AkkaPackageTags>akka;actors;actor model;Akka;concurrency</AkkaPackageTags>
  </PropertyGroup>
  <PropertyGroup>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>
  <PropertyGroup>
    <PackageReleaseNotes>Maintenance Release for Akka.NET 1.4**
Akka.NET v1.4.15 introduces a new module, Akka.DependencyInjection, which will replace Akka.DI.Core and all of the libraries which depend on it. This seemed like the easiest way to preserve backwards compatibility - simple deprecate the old package and replace it with a new one.
So what does Akka.DependencyInjection do differently than Akka.DI.Core?
1. **Allows users to pass in an [`IServiceProvider`](https://docs.microsoft.com/en-us/dotnet/api/system.iserviceprovider) into the `ActorSystem` before the latter is created, via [a new kind of programmatic configuration `Setup` that was introduced in Akka.NET v1.4](https://getakka.net/articles/concepts/configuration.html#programmatic-configuration-with-setup)**. This ensures that the `IServiceProvider` is immutable within an `ActorSystem`, a problem that we have currently with Akka.DI.Core.
2. **Makes it easy to access the `IServiceProvider` via the `Akka.DependencyInjection.ServiceProvider.For(ActorSystem)` method**, which is what we can use to get access to the service provider in order to consume required services inside our actors.
3. **Makes it possible to dependency inject some parameters will dynamically specifying some others**, something that users have been asking for since 2015.
To see a full example of how to use Akka.DependencyInjection in concert with Microsoft.Extensions.DependencyInjection, please see https://getakka.net/articles/actors/dependency-injection.html
Other changes:
[Akka: Add `WithConfigFallback` quality of life helper method to `BootstrapSetup`](https://github.com/akkadotnet/akka.net/pull/4714)
[Akka.MultiNodeTestRunner: Provide .NET 5.0 support for MultiNode TestKit](https://github.com/akkadotnet/akka.net/issues/4602)
To see the [full set of fixes in Akka.NET v1.4.15, please see the milestone on Github](https://github.com/akkadotnet/akka.net/milestone/46).
| COMMITS | LOC+ | LOC- | AUTHOR |
| --- | --- | --- | --- |
| 8 | 5351 | 4004 | Aaron Stannard |
| 3 | 5 | 5 | dependabot-preview[bot] |
| 2 | 369 | 170 | Ebere Abanonu |
| 1 | 7 | 0 | Gregorius Soedharmo |</PackageReleaseNotes>
  </PropertyGroup>
  <!-- SourceLink support for all Akka.NET projects -->
  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
  </ItemGroup>
  <PropertyGroup>
    <!--<PublishRepositoryUrl>true</PublishRepositoryUrl>-->
    <RepositoryUrl>https://github.com/akkadotnet/akka.net</RepositoryUrl>
    <!-- Optional: Embed source files that are not tracked by the source control manager in the PDB -->
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <!-- Optional: Build symbol package (.snupkg) to distribute the PDB containing Source Link -->
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>
</Project>