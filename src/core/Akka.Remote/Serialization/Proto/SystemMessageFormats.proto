/**
 * Copyright (C) 2013-2017 Akka.NET project <https://github.com/akkadotnet/akka.net>
 */

syntax = 'proto3';
package Akka.Remote.Serialization.Proto.Msg;

import 'Payload.proto';

message CreateData {
	Payload cause = 1;
}

message RecreateData {
	Payload cause = 1;
}

message SuspendData {} // empty

message ResumeData {
	Payload cause = 1;
}

message TerminateData {} // empty

message SuperviseData {
	ActorRefData child = 1;
	bool async = 2;
}

message WatchData {
	ActorRefData watchee = 1;
	ActorRefData watcher = 2;
}

message FailedData {
	ActorRefData child = 1;
	Payload cause = 2;
	uint64 uid = 3;
}

message DeathWatchNotificationData {
	ActorRefData actor = 1;
	bool existenceConfirmed = 2;
	bool addressTerminated = 3;
}

// Defines a remote ActorRef that "remembers" and uses its original Actor instance on the original node.
message ActorRefData {
	string path = 1;
}