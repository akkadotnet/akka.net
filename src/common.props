<Project>
  <PropertyGroup>
    <Copyright>Copyright Â© 2013-2021 Akka.NET Team</Copyright>
    <Authors>Akka.NET Team</Authors>
    <VersionPrefix>1.5.0</VersionPrefix>
    <PackageIcon>akkalogo.png</PackageIcon>
    <PackageProjectUrl>https://github.com/akkadotnet/akka.net</PackageProjectUrl>
    <PackageLicenseUrl>https://github.com/akkadotnet/akka.net/blob/master/LICENSE</PackageLicenseUrl>
    <NoWarn>$(NoWarn);CS1591;xUnit1013</NoWarn>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>
  <PropertyGroup>
    <XunitVersion>2.4.2</XunitVersion>
    <XunitRunnerVersion>2.4.2</XunitRunnerVersion>
    <TestSdkVersion>17.4.1</TestSdkVersion>
    <HyperionVersion>0.12.2</HyperionVersion>
    <NewtonsoftJsonVersion>[13.0.1,)</NewtonsoftJsonVersion>
    <NBenchVersion>2.0.1</NBenchVersion>
    <ProtobufVersion>3.21.12</ProtobufVersion>
    <BenchmarkDotNetVersion>0.13.2</BenchmarkDotNetVersion>
    <NetCoreTestVersion>netcoreapp3.1</NetCoreTestVersion>
    <NetTestVersion>net7.0</NetTestVersion>
    <NetFrameworkTestVersion>net471</NetFrameworkTestVersion>
    <NetStandardLibVersion>netstandard2.0</NetStandardLibVersion>
    <NetLibVersion>net6.0</NetLibVersion>
    <FluentAssertionsVersion>5.10.3</FluentAssertionsVersion>
    <ProduceReferenceAssembly>true</ProduceReferenceAssembly>
    <FsCheckVersion>2.16.5</FsCheckVersion>
    <HoconVersion>2.0.3</HoconVersion>
    <ConfigurationManagerVersion>6.0.1</ConfigurationManagerVersion>
    <MultiNodeAdapterVersion>1.1.1</MultiNodeAdapterVersion>
    <MicrosoftLibVersion>5.0.0</MicrosoftLibVersion>
    <AkkaPackageTags>akka;actors;actor model;Akka;concurrency</AkkaPackageTags>
  </PropertyGroup>
  <PropertyGroup>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>
  <PropertyGroup>
    <PackageReleaseNotes>Version 1.5.0-beta1 contains **breaking API changes** and new API changes for Akka.NET.
Breaking Changes: Logging**
In [https://github.com/akkadotnet/akka.net/pull/6408](https://github.com/akkadotnet/akka.net/pull/6408) the entire `ILoggingAdapter` interface was rewritten in order to improve extensibility and performance (logging is now 30-40% faster in all cases and allocates ~50% fewer objects for large format strings).
All of the changes made here are _source compatible_, but not _binary compatible_ - meaning that users and package authors will need to do the following:
Add `using Akka.Event` in all files that used the `ILoggingAdapter` and
Recompile.
&gt; NOTE: you can use a [`global using Akka.Event` directive](https://devblogs.microsoft.com/dotnet/welcome-to-csharp-10/#global-using-directives) to do this solution / project-wide if your project supports C# 10 and / or .NET 6.
In addition to improving the performance of the `ILoggingAdapter` system, we've also made it more extensible - for instance, you can now globally configure the `ILogMessageFormatter` via the following HOCON:
```
akka {
loglevel=INFO,
loggers=["Akka.Logger.Serilog.SerilogLogger, Akka.Logger.Serilog"]
logger-formatter="Akka.Logger.Serilog.SerilogLogMessageFormatter, Akka.Logger.Serilog"
}
```
That will allow users to use the `SerilogLogMessageFormatter` globally throughout their applications - no more annoying calls like this inside individual actors that want to use semantic logging:
```csharp
private readonly ILoggingAdapter _logger = Context.GetLogger&lt;SerilogLoggingAdapter&gt;();
```
Breaking Changes: Akka.Persistence.Sql.Common**
This is a breaking change that should effect almost no users, but [we deleted some old, bad ideas from the API surface](https://github.com/akkadotnet/akka.net/pull/6412) and it might require all Akka.Persistence.Sql* plugins to be recompiled.
For what it's worth, [Akka.Persistence.Sql.Common's performance has been improved significantly](https://github.com/akkadotnet/akka.net/pull/6384) and we'll continue working on that with some additional API changes this week.
Other Changes and Additions**
[Akka.Actor: New API - `IActorRef.WatchAsync`](https://github.com/akkadotnet/akka.net/pull/6102) - adds a new extension method to `IActorRef` which allows users to subscribe to actor lifecycle notifications outside of the `ActorSystem`.
[Akka.Actor: Suppress `System.Object` warning for serializer configuration changes](https://github.com/akkadotnet/akka.net/issues/6377)
If you want to see the [full set of changes made in Akka.NET v1.5.0 so far, click here](https://github.com/akkadotnet/akka.net/milestone/7?closed=1).
| COMMITS | LOC+ | LOC- | AUTHOR |
| --- | --- | --- | --- |
| 12 | 15 | 15 | dependabot[bot] |
| 11 | 1930 | 1278 | Aaron Stannard |
| 2 | 143 | 73 | Sergey Popov |
| 1 | 26 | 4 | Thomas Stegemann |
| 1 | 1 | 1 | Michel van Os |</PackageReleaseNotes>
  </PropertyGroup>
  <!-- SourceLink support for all Akka.NET projects -->
  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
  </ItemGroup>
  <ItemGroup>
    <None Include="$(MSBuildThisFileDirectory)\..\docs\images\akkalogo.png" Pack="true" Visible="false" PackagePath="\" />
    <None Include="$(MSBuildThisFileDirectory)\..\README.md" Pack="true" Visible="false" PackagePath="\" />
  </ItemGroup>
  <PropertyGroup>
    <!--<PublishRepositoryUrl>true</PublishRepositoryUrl>-->
    <RepositoryUrl>https://github.com/akkadotnet/akka.net</RepositoryUrl>
    <!-- Optional: Embed source files that are not tracked by the source control manager in the PDB -->
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <!-- Optional: Build symbol package (.snupkg) to distribute the PDB containing Source Link -->
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>
  <Target Name="TestValue" AfterTargets="build">
    <Message Text="@(none)">
    </Message>
  </Target>
</Project>