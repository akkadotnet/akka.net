/**
 * Copyright (C) 2013-2017 Akka.NET project <https://github.com/akkadotnet/akka.net>
 */

syntax = 'proto3';
package Akka.Remote.Serialization.Proto.Msg;
option optimize_for = SPEED;

import 'Address.proto';
import 'Payload.proto';

message ActorRef {
  string path = 1;
}

message Identify {
  Payload messageId = 1;
}

message ActorIdentity {
  Payload correlationId = 1;
  string path = 2;
}

message RemoteWatcherHeartbeatResponse {
  uint64 uid = 1;
}

message RemoteScope {
  Address node = 1;
}

message FromConfig {
  Payload resizer = 1;
  string routerDispatcher = 2;
}

message DefaultResizer {
  uint32 lowerBound = 1;
  uint32 upperBound = 2;
  uint32 pressureThreshold = 3;
  double rampupRate = 4;
  double backoffThreshold = 5;
  double backoffRate = 6;
  uint32 messagesPerResize = 7;
}

message GenericRoutingPool {
  uint32 nrOfInstances = 1;
  string routerDispatcher = 2;
  bool usePoolDispatcher = 3;
  Payload resizer = 4;
}

message ScatterGatherPool {
  GenericRoutingPool generic = 1;
  Timespan within = 2;
}

message TailChoppingPool {
  GenericRoutingPool generic = 1;
  Timespan within = 2;
  Timespan interval = 3;
}

message RemoteRouterConfig {
  Payload local = 1;
  repeated Address nodes = 2;
}

message Timespan {
  uint64 ticks = 1;
}