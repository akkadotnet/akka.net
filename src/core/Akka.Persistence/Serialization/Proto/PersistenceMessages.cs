//-----------------------------------------------------------------------
// <copyright file="PersistenceMessages.cs" company="Akka.NET Project">
//     Copyright (C) 2009-2016 Lightbend Inc. <http://www.lightbend.com>
//     Copyright (C) 2013-2016 Akka.NET project <https://github.com/akkadotnet/akka.net>
// </copyright>
//-----------------------------------------------------------------------

// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class PersistenceMessages {

  #region Extension registration
  internal static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
  }
  #endregion
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_PersistentMessage__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::PersistentMessage, global::PersistentMessage.Builder> internal__static_PersistentMessage__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_PersistentPayload__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::PersistentPayload, global::PersistentPayload.Builder> internal__static_PersistentPayload__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_AtomicWrite__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::AtomicWrite, global::AtomicWrite.Builder> internal__static_AtomicWrite__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_AtLeastOnceDeliverySnapshot__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::AtLeastOnceDeliverySnapshot, global::AtLeastOnceDeliverySnapshot.Builder> internal__static_AtLeastOnceDeliverySnapshot__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_AtLeastOnceDeliverySnapshot_UnconfirmedDelivery__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery, global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery.Builder> internal__static_AtLeastOnceDeliverySnapshot_UnconfirmedDelivery__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_PersistentStateChangeEvent__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::PersistentStateChangeEvent, global::PersistentStateChangeEvent.Builder> internal__static_PersistentStateChangeEvent__FieldAccessorTable;
  #endregion
  #region Descriptor
  internal static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static PersistenceMessages() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cidjb3JlL3Byb3RvYnVmL1BlcnNpc3RlbmNlTWVzc2FnZXMucHJvdG8iqgEK", 
          "EVBlcnNpc3RlbnRNZXNzYWdlEiMKB3BheWxvYWQYASABKAsyEi5QZXJzaXN0", 
          "ZW50UGF5bG9hZBISCgpzZXF1ZW5jZU5yGAIgASgDEhUKDXBlcnNpc3RlbmNl", 
          "SWQYAyABKAkSDwoHZGVsZXRlZBgEIAEoCBIOCgZzZW5kZXIYCyABKAkSEAoI", 
          "bWFuaWZlc3QYDCABKAkSEgoKd3JpdGVyVXVpZBgNIAEoCSJTChFQZXJzaXN0", 
          "ZW50UGF5bG9hZBIUCgxzZXJpYWxpemVySWQYASACKAUSDwoHcGF5bG9hZBgC", 
          "IAIoDBIXCg9wYXlsb2FkTWFuaWZlc3QYAyABKAwiMgoLQXRvbWljV3JpdGUS", 
          "IwoHcGF5bG9hZBgBIAMoCzISLlBlcnNpc3RlbnRNZXNzYWdlIu4BChtBdExl", 
          "YXN0T25jZURlbGl2ZXJ5U25hcHNob3QSGQoRY3VycmVudERlbGl2ZXJ5SWQY", 
          "ASACKAMSTwoVdW5jb25maXJtZWREZWxpdmVyaWVzGAIgAygLMjAuQXRMZWFz", 
          "dE9uY2VEZWxpdmVyeVNuYXBzaG90LlVuY29uZmlybWVkRGVsaXZlcnkaYwoT", 
          "VW5jb25maXJtZWREZWxpdmVyeRISCgpkZWxpdmVyeUlkGAEgAigDEhMKC2Rl", 
          "c3RpbmF0aW9uGAIgAigJEiMKB3BheWxvYWQYAyACKAsyEi5QZXJzaXN0ZW50", 
          "UGF5bG9hZCJGChpQZXJzaXN0ZW50U3RhdGVDaGFuZ2VFdmVudBIXCg9zdGF0", 
          "ZUlkZW50aWZpZXIYASACKAkSDwoHdGltZW91dBgCIAEoCUIiCh5ha2thLnBl", 
        "cnNpc3RlbmNlLnNlcmlhbGl6YXRpb25IAQ=="));
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_PersistentMessage__Descriptor = Descriptor.MessageTypes[0];
      internal__static_PersistentMessage__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::PersistentMessage, global::PersistentMessage.Builder>(internal__static_PersistentMessage__Descriptor,
              new string[] { "Payload", "SequenceNr", "PersistenceId", "Deleted", "Sender", "Manifest", "WriterUuid", });
      internal__static_PersistentPayload__Descriptor = Descriptor.MessageTypes[1];
      internal__static_PersistentPayload__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::PersistentPayload, global::PersistentPayload.Builder>(internal__static_PersistentPayload__Descriptor,
              new string[] { "SerializerId", "Payload", "PayloadManifest", });
      internal__static_AtomicWrite__Descriptor = Descriptor.MessageTypes[2];
      internal__static_AtomicWrite__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::AtomicWrite, global::AtomicWrite.Builder>(internal__static_AtomicWrite__Descriptor,
              new string[] { "Payload", });
      internal__static_AtLeastOnceDeliverySnapshot__Descriptor = Descriptor.MessageTypes[3];
      internal__static_AtLeastOnceDeliverySnapshot__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::AtLeastOnceDeliverySnapshot, global::AtLeastOnceDeliverySnapshot.Builder>(internal__static_AtLeastOnceDeliverySnapshot__Descriptor,
              new string[] { "CurrentDeliveryId", "UnconfirmedDeliveries", });
      internal__static_AtLeastOnceDeliverySnapshot_UnconfirmedDelivery__Descriptor = internal__static_AtLeastOnceDeliverySnapshot__Descriptor.NestedTypes[0];
      internal__static_AtLeastOnceDeliverySnapshot_UnconfirmedDelivery__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery, global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery.Builder>(internal__static_AtLeastOnceDeliverySnapshot_UnconfirmedDelivery__Descriptor,
              new string[] { "DeliveryId", "Destination", "Payload", });
      internal__static_PersistentStateChangeEvent__Descriptor = Descriptor.MessageTypes[4];
      internal__static_PersistentStateChangeEvent__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::PersistentStateChangeEvent, global::PersistentStateChangeEvent.Builder>(internal__static_PersistentStateChangeEvent__Descriptor,
              new string[] { "StateIdentifier", "Timeout", });
      return null;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        }, assigner);
  }
  #endregion
  
}
#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
internal sealed partial class PersistentMessage : pb::GeneratedMessage<PersistentMessage, PersistentMessage.Builder> {
  private PersistentMessage() { }
  private static readonly PersistentMessage defaultInstance = new PersistentMessage().MakeReadOnly();
  private static readonly string[] _persistentMessageFieldNames = new string[] { "deleted", "manifest", "payload", "persistenceId", "sender", "sequenceNr", "writerUuid" };
  private static readonly uint[] _persistentMessageFieldTags = new uint[] { 32, 98, 10, 26, 90, 16, 106 };
  public static PersistentMessage DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override PersistentMessage DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override PersistentMessage ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::PersistenceMessages.internal__static_PersistentMessage__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<PersistentMessage, PersistentMessage.Builder> InternalFieldAccessors {
    get { return global::PersistenceMessages.internal__static_PersistentMessage__FieldAccessorTable; }
  }
  
  public const int PayloadFieldNumber = 1;
  private bool hasPayload;
  private global::PersistentPayload payload_;
  public bool HasPayload {
    get { return hasPayload; }
  }
  public global::PersistentPayload Payload {
    get { return payload_ ?? global::PersistentPayload.DefaultInstance; }
  }
  
  public const int SequenceNrFieldNumber = 2;
  private bool hasSequenceNr;
  private long sequenceNr_;
  public bool HasSequenceNr {
    get { return hasSequenceNr; }
  }
  public long SequenceNr {
    get { return sequenceNr_; }
  }
  
  public const int PersistenceIdFieldNumber = 3;
  private bool hasPersistenceId;
  private string persistenceId_ = "";
  public bool HasPersistenceId {
    get { return hasPersistenceId; }
  }
  public string PersistenceId {
    get { return persistenceId_; }
  }
  
  public const int DeletedFieldNumber = 4;
  private bool hasDeleted;
  private bool deleted_;
  public bool HasDeleted {
    get { return hasDeleted; }
  }
  public bool Deleted {
    get { return deleted_; }
  }
  
  public const int SenderFieldNumber = 11;
  private bool hasSender;
  private string sender_ = "";
  public bool HasSender {
    get { return hasSender; }
  }
  public string Sender {
    get { return sender_; }
  }
  
  public const int ManifestFieldNumber = 12;
  private bool hasManifest;
  private string manifest_ = "";
  public bool HasManifest {
    get { return hasManifest; }
  }
  public string Manifest {
    get { return manifest_; }
  }
  
  public const int WriterUuidFieldNumber = 13;
  private bool hasWriterUuid;
  private string writerUuid_ = "";
  public bool HasWriterUuid {
    get { return hasWriterUuid; }
  }
  public string WriterUuid {
    get { return writerUuid_; }
  }
  
  public override bool IsInitialized {
    get {
      if (HasPayload) {
        if (!Payload.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _persistentMessageFieldNames;
    if (hasPayload) {
      output.WriteMessage(1, field_names[2], Payload);
    }
    if (hasSequenceNr) {
      output.WriteInt64(2, field_names[5], SequenceNr);
    }
    if (hasPersistenceId) {
      output.WriteString(3, field_names[3], PersistenceId);
    }
    if (hasDeleted) {
      output.WriteBool(4, field_names[0], Deleted);
    }
    if (hasSender) {
      output.WriteString(11, field_names[4], Sender);
    }
    if (hasManifest) {
      output.WriteString(12, field_names[1], Manifest);
    }
    if (hasWriterUuid) {
      output.WriteString(13, field_names[6], WriterUuid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasPayload) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, Payload);
    }
    if (hasSequenceNr) {
      size += pb::CodedOutputStream.ComputeInt64Size(2, SequenceNr);
    }
    if (hasPersistenceId) {
      size += pb::CodedOutputStream.ComputeStringSize(3, PersistenceId);
    }
    if (hasDeleted) {
      size += pb::CodedOutputStream.ComputeBoolSize(4, Deleted);
    }
    if (hasSender) {
      size += pb::CodedOutputStream.ComputeStringSize(11, Sender);
    }
    if (hasManifest) {
      size += pb::CodedOutputStream.ComputeStringSize(12, Manifest);
    }
    if (hasWriterUuid) {
      size += pb::CodedOutputStream.ComputeStringSize(13, WriterUuid);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static PersistentMessage ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PersistentMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PersistentMessage ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PersistentMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PersistentMessage ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PersistentMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static PersistentMessage ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static PersistentMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static PersistentMessage ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PersistentMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private PersistentMessage MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(PersistentMessage prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<PersistentMessage, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(PersistentMessage cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private PersistentMessage result;
    
    private PersistentMessage PrepareBuilder() {
      if (resultIsReadOnly) {
        PersistentMessage original = result;
        result = new PersistentMessage();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override PersistentMessage MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::PersistentMessage.Descriptor; }
    }
    
    public override PersistentMessage DefaultInstanceForType {
      get { return global::PersistentMessage.DefaultInstance; }
    }
    
    public override PersistentMessage BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is PersistentMessage) {
        return MergeFrom((PersistentMessage) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(PersistentMessage other) {
      if (other == global::PersistentMessage.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPayload) {
        MergePayload(other.Payload);
      }
      if (other.HasSequenceNr) {
        SequenceNr = other.SequenceNr;
      }
      if (other.HasPersistenceId) {
        PersistenceId = other.PersistenceId;
      }
      if (other.HasDeleted) {
        Deleted = other.Deleted;
      }
      if (other.HasSender) {
        Sender = other.Sender;
      }
      if (other.HasManifest) {
        Manifest = other.Manifest;
      }
      if (other.HasWriterUuid) {
        WriterUuid = other.WriterUuid;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_persistentMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _persistentMessageFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::PersistentPayload.Builder subBuilder = global::PersistentPayload.CreateBuilder();
            if (result.hasPayload) {
              subBuilder.MergeFrom(Payload);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Payload = subBuilder.BuildPartial();
            break;
          }
          case 16: {
            result.hasSequenceNr = input.ReadInt64(ref result.sequenceNr_);
            break;
          }
          case 26: {
            result.hasPersistenceId = input.ReadString(ref result.persistenceId_);
            break;
          }
          case 32: {
            result.hasDeleted = input.ReadBool(ref result.deleted_);
            break;
          }
          case 90: {
            result.hasSender = input.ReadString(ref result.sender_);
            break;
          }
          case 98: {
            result.hasManifest = input.ReadString(ref result.manifest_);
            break;
          }
          case 106: {
            result.hasWriterUuid = input.ReadString(ref result.writerUuid_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPayload {
     get { return result.hasPayload; }
    }
    public global::PersistentPayload Payload {
      get { return result.Payload; }
      set { SetPayload(value); }
    }
    public Builder SetPayload(global::PersistentPayload value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPayload = true;
      result.payload_ = value;
      return this;
    }
    public Builder SetPayload(global::PersistentPayload.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasPayload = true;
      result.payload_ = builderForValue.Build();
      return this;
    }
    public Builder MergePayload(global::PersistentPayload value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasPayload &&
          result.payload_ != global::PersistentPayload.DefaultInstance) {
          result.payload_ = global::PersistentPayload.CreateBuilder(result.payload_).MergeFrom(value).BuildPartial();
      } else {
        result.payload_ = value;
      }
      result.hasPayload = true;
      return this;
    }
    public Builder ClearPayload() {
      PrepareBuilder();
      result.hasPayload = false;
      result.payload_ = null;
      return this;
    }
    
    public bool HasSequenceNr {
      get { return result.hasSequenceNr; }
    }
    public long SequenceNr {
      get { return result.SequenceNr; }
      set { SetSequenceNr(value); }
    }
    public Builder SetSequenceNr(long value) {
      PrepareBuilder();
      result.hasSequenceNr = true;
      result.sequenceNr_ = value;
      return this;
    }
    public Builder ClearSequenceNr() {
      PrepareBuilder();
      result.hasSequenceNr = false;
      result.sequenceNr_ = 0L;
      return this;
    }
    
    public bool HasPersistenceId {
      get { return result.hasPersistenceId; }
    }
    public string PersistenceId {
      get { return result.PersistenceId; }
      set { SetPersistenceId(value); }
    }
    public Builder SetPersistenceId(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPersistenceId = true;
      result.persistenceId_ = value;
      return this;
    }
    public Builder ClearPersistenceId() {
      PrepareBuilder();
      result.hasPersistenceId = false;
      result.persistenceId_ = "";
      return this;
    }
    
    public bool HasDeleted {
      get { return result.hasDeleted; }
    }
    public bool Deleted {
      get { return result.Deleted; }
      set { SetDeleted(value); }
    }
    public Builder SetDeleted(bool value) {
      PrepareBuilder();
      result.hasDeleted = true;
      result.deleted_ = value;
      return this;
    }
    public Builder ClearDeleted() {
      PrepareBuilder();
      result.hasDeleted = false;
      result.deleted_ = false;
      return this;
    }
    
    public bool HasSender {
      get { return result.hasSender; }
    }
    public string Sender {
      get { return result.Sender; }
      set { SetSender(value); }
    }
    public Builder SetSender(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasSender = true;
      result.sender_ = value;
      return this;
    }
    public Builder ClearSender() {
      PrepareBuilder();
      result.hasSender = false;
      result.sender_ = "";
      return this;
    }
    
    public bool HasManifest {
      get { return result.hasManifest; }
    }
    public string Manifest {
      get { return result.Manifest; }
      set { SetManifest(value); }
    }
    public Builder SetManifest(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasManifest = true;
      result.manifest_ = value;
      return this;
    }
    public Builder ClearManifest() {
      PrepareBuilder();
      result.hasManifest = false;
      result.manifest_ = "";
      return this;
    }
    
    public bool HasWriterUuid {
      get { return result.hasWriterUuid; }
    }
    public string WriterUuid {
      get { return result.WriterUuid; }
      set { SetWriterUuid(value); }
    }
    public Builder SetWriterUuid(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasWriterUuid = true;
      result.writerUuid_ = value;
      return this;
    }
    public Builder ClearWriterUuid() {
      PrepareBuilder();
      result.hasWriterUuid = false;
      result.writerUuid_ = "";
      return this;
    }
  }
  static PersistentMessage() {
    object.ReferenceEquals(global::PersistenceMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
internal sealed partial class PersistentPayload : pb::GeneratedMessage<PersistentPayload, PersistentPayload.Builder> {
  private PersistentPayload() { }
  private static readonly PersistentPayload defaultInstance = new PersistentPayload().MakeReadOnly();
  private static readonly string[] _persistentPayloadFieldNames = new string[] { "payload", "payloadManifest", "serializerId" };
  private static readonly uint[] _persistentPayloadFieldTags = new uint[] { 18, 26, 8 };
  public static PersistentPayload DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override PersistentPayload DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override PersistentPayload ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::PersistenceMessages.internal__static_PersistentPayload__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<PersistentPayload, PersistentPayload.Builder> InternalFieldAccessors {
    get { return global::PersistenceMessages.internal__static_PersistentPayload__FieldAccessorTable; }
  }
  
  public const int SerializerIdFieldNumber = 1;
  private bool hasSerializerId;
  private int serializerId_;
  public bool HasSerializerId {
    get { return hasSerializerId; }
  }
  public int SerializerId {
    get { return serializerId_; }
  }
  
  public const int PayloadFieldNumber = 2;
  private bool hasPayload;
  private pb::ByteString payload_ = pb::ByteString.Empty;
  public bool HasPayload {
    get { return hasPayload; }
  }
  public pb::ByteString Payload {
    get { return payload_; }
  }
  
  public const int PayloadManifestFieldNumber = 3;
  private bool hasPayloadManifest;
  private pb::ByteString payloadManifest_ = pb::ByteString.Empty;
  public bool HasPayloadManifest {
    get { return hasPayloadManifest; }
  }
  public pb::ByteString PayloadManifest {
    get { return payloadManifest_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasSerializerId) return false;
      if (!hasPayload) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _persistentPayloadFieldNames;
    if (hasSerializerId) {
      output.WriteInt32(1, field_names[2], SerializerId);
    }
    if (hasPayload) {
      output.WriteBytes(2, field_names[0], Payload);
    }
    if (hasPayloadManifest) {
      output.WriteBytes(3, field_names[1], PayloadManifest);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasSerializerId) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, SerializerId);
    }
    if (hasPayload) {
      size += pb::CodedOutputStream.ComputeBytesSize(2, Payload);
    }
    if (hasPayloadManifest) {
      size += pb::CodedOutputStream.ComputeBytesSize(3, PayloadManifest);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static PersistentPayload ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PersistentPayload ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PersistentPayload ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PersistentPayload ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PersistentPayload ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PersistentPayload ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static PersistentPayload ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static PersistentPayload ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static PersistentPayload ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PersistentPayload ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private PersistentPayload MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(PersistentPayload prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<PersistentPayload, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(PersistentPayload cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private PersistentPayload result;
    
    private PersistentPayload PrepareBuilder() {
      if (resultIsReadOnly) {
        PersistentPayload original = result;
        result = new PersistentPayload();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override PersistentPayload MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::PersistentPayload.Descriptor; }
    }
    
    public override PersistentPayload DefaultInstanceForType {
      get { return global::PersistentPayload.DefaultInstance; }
    }
    
    public override PersistentPayload BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is PersistentPayload) {
        return MergeFrom((PersistentPayload) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(PersistentPayload other) {
      if (other == global::PersistentPayload.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSerializerId) {
        SerializerId = other.SerializerId;
      }
      if (other.HasPayload) {
        Payload = other.Payload;
      }
      if (other.HasPayloadManifest) {
        PayloadManifest = other.PayloadManifest;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_persistentPayloadFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _persistentPayloadFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasSerializerId = input.ReadInt32(ref result.serializerId_);
            break;
          }
          case 18: {
            result.hasPayload = input.ReadBytes(ref result.payload_);
            break;
          }
          case 26: {
            result.hasPayloadManifest = input.ReadBytes(ref result.payloadManifest_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSerializerId {
      get { return result.hasSerializerId; }
    }
    public int SerializerId {
      get { return result.SerializerId; }
      set { SetSerializerId(value); }
    }
    public Builder SetSerializerId(int value) {
      PrepareBuilder();
      result.hasSerializerId = true;
      result.serializerId_ = value;
      return this;
    }
    public Builder ClearSerializerId() {
      PrepareBuilder();
      result.hasSerializerId = false;
      result.serializerId_ = 0;
      return this;
    }
    
    public bool HasPayload {
      get { return result.hasPayload; }
    }
    public pb::ByteString Payload {
      get { return result.Payload; }
      set { SetPayload(value); }
    }
    public Builder SetPayload(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPayload = true;
      result.payload_ = value;
      return this;
    }
    public Builder ClearPayload() {
      PrepareBuilder();
      result.hasPayload = false;
      result.payload_ = pb::ByteString.Empty;
      return this;
    }
    
    public bool HasPayloadManifest {
      get { return result.hasPayloadManifest; }
    }
    public pb::ByteString PayloadManifest {
      get { return result.PayloadManifest; }
      set { SetPayloadManifest(value); }
    }
    public Builder SetPayloadManifest(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPayloadManifest = true;
      result.payloadManifest_ = value;
      return this;
    }
    public Builder ClearPayloadManifest() {
      PrepareBuilder();
      result.hasPayloadManifest = false;
      result.payloadManifest_ = pb::ByteString.Empty;
      return this;
    }
  }
  static PersistentPayload() {
    object.ReferenceEquals(global::PersistenceMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
internal sealed partial class AtomicWrite : pb::GeneratedMessage<AtomicWrite, AtomicWrite.Builder> {
  private AtomicWrite() { }
  private static readonly AtomicWrite defaultInstance = new AtomicWrite().MakeReadOnly();
  private static readonly string[] _atomicWriteFieldNames = new string[] { "payload" };
  private static readonly uint[] _atomicWriteFieldTags = new uint[] { 10 };
  public static AtomicWrite DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override AtomicWrite DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override AtomicWrite ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::PersistenceMessages.internal__static_AtomicWrite__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<AtomicWrite, AtomicWrite.Builder> InternalFieldAccessors {
    get { return global::PersistenceMessages.internal__static_AtomicWrite__FieldAccessorTable; }
  }
  
  public const int PayloadFieldNumber = 1;
  private pbc::PopsicleList<global::PersistentMessage> payload_ = new pbc::PopsicleList<global::PersistentMessage>();
  public scg::IList<global::PersistentMessage> PayloadList {
    get { return payload_; }
  }
  public int PayloadCount {
    get { return payload_.Count; }
  }
  public global::PersistentMessage GetPayload(int index) {
    return payload_[index];
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::PersistentMessage element in PayloadList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _atomicWriteFieldNames;
    if (payload_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], payload_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::PersistentMessage element in PayloadList) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static AtomicWrite ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static AtomicWrite ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static AtomicWrite ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static AtomicWrite ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static AtomicWrite ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static AtomicWrite ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static AtomicWrite ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static AtomicWrite ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static AtomicWrite ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static AtomicWrite ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private AtomicWrite MakeReadOnly() {
    payload_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(AtomicWrite prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<AtomicWrite, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(AtomicWrite cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private AtomicWrite result;
    
    private AtomicWrite PrepareBuilder() {
      if (resultIsReadOnly) {
        AtomicWrite original = result;
        result = new AtomicWrite();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override AtomicWrite MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::AtomicWrite.Descriptor; }
    }
    
    public override AtomicWrite DefaultInstanceForType {
      get { return global::AtomicWrite.DefaultInstance; }
    }
    
    public override AtomicWrite BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is AtomicWrite) {
        return MergeFrom((AtomicWrite) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(AtomicWrite other) {
      if (other == global::AtomicWrite.DefaultInstance) return this;
      PrepareBuilder();
      if (other.payload_.Count != 0) {
        result.payload_.Add(other.payload_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_atomicWriteFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _atomicWriteFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.payload_, global::PersistentMessage.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::PersistentMessage> PayloadList {
      get { return PrepareBuilder().payload_; }
    }
    public int PayloadCount {
      get { return result.PayloadCount; }
    }
    public global::PersistentMessage GetPayload(int index) {
      return result.GetPayload(index);
    }
    public Builder SetPayload(int index, global::PersistentMessage value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.payload_[index] = value;
      return this;
    }
    public Builder SetPayload(int index, global::PersistentMessage.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.payload_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddPayload(global::PersistentMessage value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.payload_.Add(value);
      return this;
    }
    public Builder AddPayload(global::PersistentMessage.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.payload_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangePayload(scg::IEnumerable<global::PersistentMessage> values) {
      PrepareBuilder();
      result.payload_.Add(values);
      return this;
    }
    public Builder ClearPayload() {
      PrepareBuilder();
      result.payload_.Clear();
      return this;
    }
  }
  static AtomicWrite() {
    object.ReferenceEquals(global::PersistenceMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
internal sealed partial class AtLeastOnceDeliverySnapshot : pb::GeneratedMessage<AtLeastOnceDeliverySnapshot, AtLeastOnceDeliverySnapshot.Builder> {
  private AtLeastOnceDeliverySnapshot() { }
  private static readonly AtLeastOnceDeliverySnapshot defaultInstance = new AtLeastOnceDeliverySnapshot().MakeReadOnly();
  private static readonly string[] _atLeastOnceDeliverySnapshotFieldNames = new string[] { "currentDeliveryId", "unconfirmedDeliveries" };
  private static readonly uint[] _atLeastOnceDeliverySnapshotFieldTags = new uint[] { 8, 18 };
  public static AtLeastOnceDeliverySnapshot DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override AtLeastOnceDeliverySnapshot DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override AtLeastOnceDeliverySnapshot ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::PersistenceMessages.internal__static_AtLeastOnceDeliverySnapshot__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<AtLeastOnceDeliverySnapshot, AtLeastOnceDeliverySnapshot.Builder> InternalFieldAccessors {
    get { return global::PersistenceMessages.internal__static_AtLeastOnceDeliverySnapshot__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class UnconfirmedDelivery : pb::GeneratedMessage<UnconfirmedDelivery, UnconfirmedDelivery.Builder> {
      private UnconfirmedDelivery() { }
      private static readonly UnconfirmedDelivery defaultInstance = new UnconfirmedDelivery().MakeReadOnly();
      private static readonly string[] _unconfirmedDeliveryFieldNames = new string[] { "deliveryId", "destination", "payload" };
      private static readonly uint[] _unconfirmedDeliveryFieldTags = new uint[] { 8, 18, 26 };
      public static UnconfirmedDelivery DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override UnconfirmedDelivery DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override UnconfirmedDelivery ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::PersistenceMessages.internal__static_AtLeastOnceDeliverySnapshot_UnconfirmedDelivery__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<UnconfirmedDelivery, UnconfirmedDelivery.Builder> InternalFieldAccessors {
        get { return global::PersistenceMessages.internal__static_AtLeastOnceDeliverySnapshot_UnconfirmedDelivery__FieldAccessorTable; }
      }
      
      public const int DeliveryIdFieldNumber = 1;
      private bool hasDeliveryId;
      private long deliveryId_;
      public bool HasDeliveryId {
        get { return hasDeliveryId; }
      }
      public long DeliveryId {
        get { return deliveryId_; }
      }
      
      public const int DestinationFieldNumber = 2;
      private bool hasDestination;
      private string destination_ = "";
      public bool HasDestination {
        get { return hasDestination; }
      }
      public string Destination {
        get { return destination_; }
      }
      
      public const int PayloadFieldNumber = 3;
      private bool hasPayload;
      private global::PersistentPayload payload_;
      public bool HasPayload {
        get { return hasPayload; }
      }
      public global::PersistentPayload Payload {
        get { return payload_ ?? global::PersistentPayload.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasDeliveryId) return false;
          if (!hasDestination) return false;
          if (!hasPayload) return false;
          if (!Payload.IsInitialized) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _unconfirmedDeliveryFieldNames;
        if (hasDeliveryId) {
          output.WriteInt64(1, field_names[0], DeliveryId);
        }
        if (hasDestination) {
          output.WriteString(2, field_names[1], Destination);
        }
        if (hasPayload) {
          output.WriteMessage(3, field_names[2], Payload);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasDeliveryId) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, DeliveryId);
        }
        if (hasDestination) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Destination);
        }
        if (hasPayload) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Payload);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static UnconfirmedDelivery ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static UnconfirmedDelivery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static UnconfirmedDelivery ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static UnconfirmedDelivery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static UnconfirmedDelivery ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static UnconfirmedDelivery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static UnconfirmedDelivery ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static UnconfirmedDelivery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static UnconfirmedDelivery ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static UnconfirmedDelivery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private UnconfirmedDelivery MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(UnconfirmedDelivery prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<UnconfirmedDelivery, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(UnconfirmedDelivery cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private UnconfirmedDelivery result;
        
        private UnconfirmedDelivery PrepareBuilder() {
          if (resultIsReadOnly) {
            UnconfirmedDelivery original = result;
            result = new UnconfirmedDelivery();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override UnconfirmedDelivery MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery.Descriptor; }
        }
        
        public override UnconfirmedDelivery DefaultInstanceForType {
          get { return global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery.DefaultInstance; }
        }
        
        public override UnconfirmedDelivery BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is UnconfirmedDelivery) {
            return MergeFrom((UnconfirmedDelivery) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(UnconfirmedDelivery other) {
          if (other == global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasDeliveryId) {
            DeliveryId = other.DeliveryId;
          }
          if (other.HasDestination) {
            Destination = other.Destination;
          }
          if (other.HasPayload) {
            MergePayload(other.Payload);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_unconfirmedDeliveryFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _unconfirmedDeliveryFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasDeliveryId = input.ReadInt64(ref result.deliveryId_);
                break;
              }
              case 18: {
                result.hasDestination = input.ReadString(ref result.destination_);
                break;
              }
              case 26: {
                global::PersistentPayload.Builder subBuilder = global::PersistentPayload.CreateBuilder();
                if (result.hasPayload) {
                  subBuilder.MergeFrom(Payload);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Payload = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasDeliveryId {
          get { return result.hasDeliveryId; }
        }
        public long DeliveryId {
          get { return result.DeliveryId; }
          set { SetDeliveryId(value); }
        }
        public Builder SetDeliveryId(long value) {
          PrepareBuilder();
          result.hasDeliveryId = true;
          result.deliveryId_ = value;
          return this;
        }
        public Builder ClearDeliveryId() {
          PrepareBuilder();
          result.hasDeliveryId = false;
          result.deliveryId_ = 0L;
          return this;
        }
        
        public bool HasDestination {
          get { return result.hasDestination; }
        }
        public string Destination {
          get { return result.Destination; }
          set { SetDestination(value); }
        }
        public Builder SetDestination(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasDestination = true;
          result.destination_ = value;
          return this;
        }
        public Builder ClearDestination() {
          PrepareBuilder();
          result.hasDestination = false;
          result.destination_ = "";
          return this;
        }
        
        public bool HasPayload {
         get { return result.hasPayload; }
        }
        public global::PersistentPayload Payload {
          get { return result.Payload; }
          set { SetPayload(value); }
        }
        public Builder SetPayload(global::PersistentPayload value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasPayload = true;
          result.payload_ = value;
          return this;
        }
        public Builder SetPayload(global::PersistentPayload.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasPayload = true;
          result.payload_ = builderForValue.Build();
          return this;
        }
        public Builder MergePayload(global::PersistentPayload value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasPayload &&
              result.payload_ != global::PersistentPayload.DefaultInstance) {
              result.payload_ = global::PersistentPayload.CreateBuilder(result.payload_).MergeFrom(value).BuildPartial();
          } else {
            result.payload_ = value;
          }
          result.hasPayload = true;
          return this;
        }
        public Builder ClearPayload() {
          PrepareBuilder();
          result.hasPayload = false;
          result.payload_ = null;
          return this;
        }
      }
      static UnconfirmedDelivery() {
        object.ReferenceEquals(global::PersistenceMessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int CurrentDeliveryIdFieldNumber = 1;
  private bool hasCurrentDeliveryId;
  private long currentDeliveryId_;
  public bool HasCurrentDeliveryId {
    get { return hasCurrentDeliveryId; }
  }
  public long CurrentDeliveryId {
    get { return currentDeliveryId_; }
  }
  
  public const int UnconfirmedDeliveriesFieldNumber = 2;
  private pbc::PopsicleList<global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery> unconfirmedDeliveries_ = new pbc::PopsicleList<global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery>();
  public scg::IList<global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery> UnconfirmedDeliveriesList {
    get { return unconfirmedDeliveries_; }
  }
  public int UnconfirmedDeliveriesCount {
    get { return unconfirmedDeliveries_.Count; }
  }
  public global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery GetUnconfirmedDeliveries(int index) {
    return unconfirmedDeliveries_[index];
  }
  
  public override bool IsInitialized {
    get {
      if (!hasCurrentDeliveryId) return false;
      foreach (global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery element in UnconfirmedDeliveriesList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _atLeastOnceDeliverySnapshotFieldNames;
    if (hasCurrentDeliveryId) {
      output.WriteInt64(1, field_names[0], CurrentDeliveryId);
    }
    if (unconfirmedDeliveries_.Count > 0) {
      output.WriteMessageArray(2, field_names[1], unconfirmedDeliveries_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasCurrentDeliveryId) {
      size += pb::CodedOutputStream.ComputeInt64Size(1, CurrentDeliveryId);
    }
    foreach (global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery element in UnconfirmedDeliveriesList) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static AtLeastOnceDeliverySnapshot ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static AtLeastOnceDeliverySnapshot ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static AtLeastOnceDeliverySnapshot ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static AtLeastOnceDeliverySnapshot ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static AtLeastOnceDeliverySnapshot ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static AtLeastOnceDeliverySnapshot ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static AtLeastOnceDeliverySnapshot ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static AtLeastOnceDeliverySnapshot ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static AtLeastOnceDeliverySnapshot ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static AtLeastOnceDeliverySnapshot ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private AtLeastOnceDeliverySnapshot MakeReadOnly() {
    unconfirmedDeliveries_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(AtLeastOnceDeliverySnapshot prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<AtLeastOnceDeliverySnapshot, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(AtLeastOnceDeliverySnapshot cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private AtLeastOnceDeliverySnapshot result;
    
    private AtLeastOnceDeliverySnapshot PrepareBuilder() {
      if (resultIsReadOnly) {
        AtLeastOnceDeliverySnapshot original = result;
        result = new AtLeastOnceDeliverySnapshot();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override AtLeastOnceDeliverySnapshot MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::AtLeastOnceDeliverySnapshot.Descriptor; }
    }
    
    public override AtLeastOnceDeliverySnapshot DefaultInstanceForType {
      get { return global::AtLeastOnceDeliverySnapshot.DefaultInstance; }
    }
    
    public override AtLeastOnceDeliverySnapshot BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is AtLeastOnceDeliverySnapshot) {
        return MergeFrom((AtLeastOnceDeliverySnapshot) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(AtLeastOnceDeliverySnapshot other) {
      if (other == global::AtLeastOnceDeliverySnapshot.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCurrentDeliveryId) {
        CurrentDeliveryId = other.CurrentDeliveryId;
      }
      if (other.unconfirmedDeliveries_.Count != 0) {
        result.unconfirmedDeliveries_.Add(other.unconfirmedDeliveries_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_atLeastOnceDeliverySnapshotFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _atLeastOnceDeliverySnapshotFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasCurrentDeliveryId = input.ReadInt64(ref result.currentDeliveryId_);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.unconfirmedDeliveries_, global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCurrentDeliveryId {
      get { return result.hasCurrentDeliveryId; }
    }
    public long CurrentDeliveryId {
      get { return result.CurrentDeliveryId; }
      set { SetCurrentDeliveryId(value); }
    }
    public Builder SetCurrentDeliveryId(long value) {
      PrepareBuilder();
      result.hasCurrentDeliveryId = true;
      result.currentDeliveryId_ = value;
      return this;
    }
    public Builder ClearCurrentDeliveryId() {
      PrepareBuilder();
      result.hasCurrentDeliveryId = false;
      result.currentDeliveryId_ = 0L;
      return this;
    }
    
    public pbc::IPopsicleList<global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery> UnconfirmedDeliveriesList {
      get { return PrepareBuilder().unconfirmedDeliveries_; }
    }
    public int UnconfirmedDeliveriesCount {
      get { return result.UnconfirmedDeliveriesCount; }
    }
    public global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery GetUnconfirmedDeliveries(int index) {
      return result.GetUnconfirmedDeliveries(index);
    }
    public Builder SetUnconfirmedDeliveries(int index, global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.unconfirmedDeliveries_[index] = value;
      return this;
    }
    public Builder SetUnconfirmedDeliveries(int index, global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.unconfirmedDeliveries_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddUnconfirmedDeliveries(global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.unconfirmedDeliveries_.Add(value);
      return this;
    }
    public Builder AddUnconfirmedDeliveries(global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.unconfirmedDeliveries_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeUnconfirmedDeliveries(scg::IEnumerable<global::AtLeastOnceDeliverySnapshot.Types.UnconfirmedDelivery> values) {
      PrepareBuilder();
      result.unconfirmedDeliveries_.Add(values);
      return this;
    }
    public Builder ClearUnconfirmedDeliveries() {
      PrepareBuilder();
      result.unconfirmedDeliveries_.Clear();
      return this;
    }
  }
  static AtLeastOnceDeliverySnapshot() {
    object.ReferenceEquals(global::PersistenceMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
internal sealed partial class PersistentStateChangeEvent : pb::GeneratedMessage<PersistentStateChangeEvent, PersistentStateChangeEvent.Builder> {
  private PersistentStateChangeEvent() { }
  private static readonly PersistentStateChangeEvent defaultInstance = new PersistentStateChangeEvent().MakeReadOnly();
  private static readonly string[] _persistentStateChangeEventFieldNames = new string[] { "stateIdentifier", "timeout" };
  private static readonly uint[] _persistentStateChangeEventFieldTags = new uint[] { 10, 18 };
  public static PersistentStateChangeEvent DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override PersistentStateChangeEvent DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override PersistentStateChangeEvent ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::PersistenceMessages.internal__static_PersistentStateChangeEvent__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<PersistentStateChangeEvent, PersistentStateChangeEvent.Builder> InternalFieldAccessors {
    get { return global::PersistenceMessages.internal__static_PersistentStateChangeEvent__FieldAccessorTable; }
  }
  
  public const int StateIdentifierFieldNumber = 1;
  private bool hasStateIdentifier;
  private string stateIdentifier_ = "";
  public bool HasStateIdentifier {
    get { return hasStateIdentifier; }
  }
  public string StateIdentifier {
    get { return stateIdentifier_; }
  }
  
  public const int TimeoutFieldNumber = 2;
  private bool hasTimeout;
  private string timeout_ = "";
  public bool HasTimeout {
    get { return hasTimeout; }
  }
  public string Timeout {
    get { return timeout_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasStateIdentifier) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _persistentStateChangeEventFieldNames;
    if (hasStateIdentifier) {
      output.WriteString(1, field_names[0], StateIdentifier);
    }
    if (hasTimeout) {
      output.WriteString(2, field_names[1], Timeout);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasStateIdentifier) {
      size += pb::CodedOutputStream.ComputeStringSize(1, StateIdentifier);
    }
    if (hasTimeout) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Timeout);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static PersistentStateChangeEvent ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PersistentStateChangeEvent ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PersistentStateChangeEvent ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PersistentStateChangeEvent ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PersistentStateChangeEvent ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PersistentStateChangeEvent ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static PersistentStateChangeEvent ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static PersistentStateChangeEvent ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static PersistentStateChangeEvent ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PersistentStateChangeEvent ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private PersistentStateChangeEvent MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(PersistentStateChangeEvent prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<PersistentStateChangeEvent, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(PersistentStateChangeEvent cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private PersistentStateChangeEvent result;
    
    private PersistentStateChangeEvent PrepareBuilder() {
      if (resultIsReadOnly) {
        PersistentStateChangeEvent original = result;
        result = new PersistentStateChangeEvent();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override PersistentStateChangeEvent MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::PersistentStateChangeEvent.Descriptor; }
    }
    
    public override PersistentStateChangeEvent DefaultInstanceForType {
      get { return global::PersistentStateChangeEvent.DefaultInstance; }
    }
    
    public override PersistentStateChangeEvent BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is PersistentStateChangeEvent) {
        return MergeFrom((PersistentStateChangeEvent) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(PersistentStateChangeEvent other) {
      if (other == global::PersistentStateChangeEvent.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasStateIdentifier) {
        StateIdentifier = other.StateIdentifier;
      }
      if (other.HasTimeout) {
        Timeout = other.Timeout;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_persistentStateChangeEventFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _persistentStateChangeEventFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasStateIdentifier = input.ReadString(ref result.stateIdentifier_);
            break;
          }
          case 18: {
            result.hasTimeout = input.ReadString(ref result.timeout_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasStateIdentifier {
      get { return result.hasStateIdentifier; }
    }
    public string StateIdentifier {
      get { return result.StateIdentifier; }
      set { SetStateIdentifier(value); }
    }
    public Builder SetStateIdentifier(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasStateIdentifier = true;
      result.stateIdentifier_ = value;
      return this;
    }
    public Builder ClearStateIdentifier() {
      PrepareBuilder();
      result.hasStateIdentifier = false;
      result.stateIdentifier_ = "";
      return this;
    }
    
    public bool HasTimeout {
      get { return result.hasTimeout; }
    }
    public string Timeout {
      get { return result.Timeout; }
      set { SetTimeout(value); }
    }
    public Builder SetTimeout(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasTimeout = true;
      result.timeout_ = value;
      return this;
    }
    public Builder ClearTimeout() {
      PrepareBuilder();
      result.hasTimeout = false;
      result.timeout_ = "";
      return this;
    }
  }
  static PersistentStateChangeEvent() {
    object.ReferenceEquals(global::PersistenceMessages.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
